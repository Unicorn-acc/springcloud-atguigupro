#微服务一定要有端口号与微服务名称
server:
  port: 8001
spring:
  application:
    name: cloud-payment-service #给微服务配置一个名字！这个名字就是这个微服务对外暴露的名字！
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: org.gjt.mm.mysql.Driver
    url: jdbc:mysql://localhost:3306/cloud2020?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 20181112623

mybatis:  #mybatis整合
  mapper-locations: classpath:mapper/*.xml  #resources文件夹下建mapper文件
  type-aliases-package: springcloud.entities  # 所有Entity 别名类所在包

eureka:
  client:
    # false 代表不向服务注册中心注册自己，因为它本身就是服务中心
    register-with-eureka: true   #将自己注册进EurekaServer
    # false 代表自己就是服务注册中心，自己的作用就是维护服务实例，并不需要去检索服务
    fetch-registry: true    #抓取已有的注册信息，集群设置为true才能配合ribbon使用负载均衡
    service-url:
      # 设置与 Eureka Server 交互的地址，查询服务 和 注册服务都依赖这个地址
      #defaultZone: http://localhost:7001/eureka/ 单机版
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/ #集群版
  instance:
      instance-id: payment8001 #修改主机名称 健康检查/actuator/health
      prefer-ip-address: true     #显示ip
      #lease-expiration-duration-in-seconds:  1 #客户端向服务端发送心跳的间隔
      #lease-expiration-duration-in-seconds: 2  #服务端在收到最后一次心跳后等待时间上限，超时剔除服务

#第一次尝试编译时出现错误：
#Web server failed to start. Port 8080 was already in use.
#原因是server:   port: 8001 中的port:8001内无空格
#Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
#原因可能是导入了eureka依赖而没有配置eureka，添加后编译成功
#     eureka:
#       client:
#        register-with-eureka: false
#        fetch-registry: false
#yml文件绿叶图标消失：在File types中的Text文件类型下注册了 删去  对maven导入时要重构